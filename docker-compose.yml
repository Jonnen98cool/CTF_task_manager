version: "3.8"          #Specify version to use, not sure what best practice is
services:               #In here you define all the containers you want to run

  #Container 1
  webserver:            #Name of the container you want to define
    build: .            #Define directory in which this container's "Dockerfile" can be found
    #After the container has been built, run these commands on it.
    command: bash -c "
        printf \"\033[92mAfter both two servers are launched, you may access the application on 127.0.0.1:5001. Users outside this network may access the app at your routers external interface ip (whatsmyip.org) and the port from which the router forwards/redirects to 5001. For example:   http://1.2.3.4:5002\n\033[0m\"
        && printf \"\033[92mLaunching servers now...\n\033[0m\"
        && printf \"\033[92m\t  Launching Nginx reverse proxy server on this container's IP (IP is irrelevant, container is bridged) on port 5001\n\033[0m\"
        && nginx
        && printf \"\033[92m\t  Launching Gunicorn server on 127.0.0.1:5000\n\033[0m\"
        && PYTHONUNBUFFERED=TRUE gunicorn -w 1 -b 127.0.0.1:5000 'main:create_app(admin_user=\"${ADMIN_USER}\", fresh_db=${FRESH_DB})' 
        && print \"If you ever see this message that means the Gunicorn server has crashed. Restart the container.\"
        "   
    ports:              #Specify ports this container should expose in order HOST:CONTAINER
     - 5001:5001        #Nginx is running in container's port 5001 (RHS), accessed through host on 5001 (LHS)
    #command: tail -F /dev/null   #Command to wait indefinitely, prevents container from exiting (debug)

  #Container 2
  #...
